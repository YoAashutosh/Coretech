/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coursework;

import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anisharyal
 */
public class Coretech extends javax.swing.JFrame {

    /**
     * Creates new form Coretech
     */
    DefaultTableModel model;
    
    
    public Coretech() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bttnGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchTf = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        modelCodeTf = new javax.swing.JTextField();
        modelNameTf = new javax.swing.JTextField();
        priceTf = new javax.swing.JTextField();
        priceRangeTf = new javax.swing.JTextField();
        mobileRBttn = new javax.swing.JRadioButton();
        tabletRBttn = new javax.swing.JRadioButton();
        addBttn = new javax.swing.JButton();
        clearBttn = new javax.swing.JButton();
        quantityTf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        brandTf = new javax.swing.JComboBox<>();
        searchBttn = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Coretech Information System");
        setBackground(new java.awt.Color(204, 204, 204));
        setIconImages(null);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(271, 720));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Coretech");

        searchTf.setBackground(new java.awt.Color(247, 247, 247));
        searchTf.setText("Search By Price");
        searchTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        searchTf.setName(""); // NOI18N
        searchTf.setPreferredSize(new java.awt.Dimension(223, 40));
        searchTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTfFocusLost(evt);
            }
        });
        searchTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTfActionPerformed(evt);
            }
        });
        searchTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTfKeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(204, 204, 204)));
        jPanel2.setPreferredSize(new java.awt.Dimension(223, 509));

        jLabel3.setFont(new java.awt.Font("Manrope", 1, 14)); // NOI18N
        jLabel3.setText("Add to Inventory");

        modelCodeTf.setBackground(new java.awt.Color(247, 247, 247));
        modelCodeTf.setForeground(new java.awt.Color(204, 204, 204));
        modelCodeTf.setText("Model Code");
        modelCodeTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        modelCodeTf.setPreferredSize(new java.awt.Dimension(223, 40));
        modelCodeTf.setSize(new java.awt.Dimension(223, 40));
        modelCodeTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modelCodeTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modelCodeTfFocusLost(evt);
            }
        });
        modelCodeTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelCodeTfActionPerformed(evt);
            }
        });

        modelNameTf.setBackground(new java.awt.Color(247, 247, 247));
        modelNameTf.setForeground(new java.awt.Color(204, 204, 204));
        modelNameTf.setText("Model Name");
        modelNameTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        modelNameTf.setPreferredSize(new java.awt.Dimension(223, 40));
        modelNameTf.setSize(new java.awt.Dimension(223, 40));
        modelNameTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modelNameTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modelNameTfFocusLost(evt);
            }
        });
        modelNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelNameTfActionPerformed(evt);
            }
        });

        priceTf.setBackground(new java.awt.Color(247, 247, 247));
        priceTf.setForeground(new java.awt.Color(204, 204, 204));
        priceTf.setText("Price");
        priceTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        priceTf.setPreferredSize(new java.awt.Dimension(223, 40));
        priceTf.setSize(new java.awt.Dimension(223, 40));
        priceTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceTfFocusLost(evt);
            }
        });
        priceTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTfKeyPressed(evt);
            }
        });

        priceRangeTf.setBackground(new java.awt.Color(247, 247, 247));
        priceRangeTf.setForeground(new java.awt.Color(204, 204, 204));
        priceRangeTf.setText("Price Range");
        priceRangeTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        priceRangeTf.setPreferredSize(new java.awt.Dimension(223, 40));
        priceRangeTf.setSize(new java.awt.Dimension(223, 40));
        priceRangeTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                priceRangeTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                priceRangeTfFocusLost(evt);
            }
        });

        bttnGroup1.add(mobileRBttn);
        mobileRBttn.setText("Mobile");
        mobileRBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileRBttnActionPerformed(evt);
            }
        });

        bttnGroup1.add(tabletRBttn);
        tabletRBttn.setText("Tablet");

        addBttn.setBackground(new java.awt.Color(230, 238, 254));
        addBttn.setForeground(new java.awt.Color(51, 51, 255));
        addBttn.setText("Add +");
        addBttn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        addBttn.setBorderPainted(false);
        addBttn.setPreferredSize(new java.awt.Dimension(223, 40));
        addBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBttnActionPerformed(evt);
            }
        });

        clearBttn.setBackground(new java.awt.Color(230, 238, 254));
        clearBttn.setForeground(new java.awt.Color(255, 0, 0));
        clearBttn.setText("Clear -");
        clearBttn.setActionCommand("Clear");
        clearBttn.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        clearBttn.setBorderPainted(false);
        clearBttn.setPreferredSize(new java.awt.Dimension(223, 40));
        clearBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBttnActionPerformed(evt);
            }
        });

        quantityTf.setBackground(new java.awt.Color(247, 247, 247));
        quantityTf.setForeground(new java.awt.Color(204, 204, 204));
        quantityTf.setText("Quantity");
        quantityTf.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        quantityTf.setPreferredSize(new java.awt.Dimension(223, 40));
        quantityTf.setSize(new java.awt.Dimension(223, 40));
        quantityTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                quantityTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                quantityTfFocusLost(evt);
            }
        });
        quantityTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTfActionPerformed(evt);
            }
        });
        quantityTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantityTfKeyPressed(evt);
            }
        });

        jLabel2.setText("Type:");

        brandTf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Choose Brand-", "Realme", "Apple", "Samsung", "Index", "Huawei", "Xiaomi", "Oppo", "Vivo", "Blackberry", "Redmi", "CG", "LG" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(modelCodeTf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(modelNameTf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(priceTf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(priceRangeTf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(quantityTf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mobileRBttn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tabletRBttn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(brandTf, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addComponent(modelCodeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(modelNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(brandTf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(priceTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(priceRangeTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(quantityTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabletRBttn)
                    .addComponent(mobileRBttn)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearBttn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBttn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        searchBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Coursework/icons8-search-24.png"))); // NOI18N
        searchBttn.setBorder(null);
        searchBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBttnActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Product Company-", "Realme", "Apple", "Samsung", "Index", "Huawei", "Xiaomi", "Oppo", "Vivo", "Blackberry", "Redmi", "CG", "LG" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Count");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBttn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBttn, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(7, 7, 7)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"RMx11", "realme XT", "Realme", "800", "Medium", "Mobile", "10"},
                {"AP122", "iPhone 12", "Apple", "1100", "High", "Mobile", "14"},
                {"Ip12", "ipad 13 gen", "Apple", "1200", "High", "Tablet", "11"},
                {"Gp12", "Galaxy Note ", "Samsung", "800", "Medium", "Tablet", "20"},
                {"IN45", "Index Ig", "Index", "450", "Low", "Mobile", "15"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Model Code", "Model Name", "Brand", "Price", "Price Range", "Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setDoubleBuffered(true);
        jTable1.setOpaque(false);
        jTable1.setSelectionBackground(new java.awt.Color(153, 204, 255));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Coursework/exit (2).png"))); // NOI18N
        jButton2.setText("Exit");
        jButton2.setPreferredSize(new java.awt.Dimension(94, 41));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Note: \"IF you want to delete row from the table you can simply do so by clicking the cell on the row you want to delete.\"");

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTfActionPerformed

    private void modelCodeTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelCodeTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelCodeTfActionPerformed

    private void mobileRBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileRBttnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileRBttnActionPerformed

    private void addBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBttnActionPerformed
        // TODO add your handling code here:
        String code = modelCodeTf.getText();
        String name = modelNameTf.getText();
        String brand = (String) brandTf.getSelectedItem();
        String price = priceTf.getText();
        String priceRange = priceRangeTf.getText();
        String quantity = quantityTf.getText();
        String type="";
        if(mobileRBttn.isSelected())
        {
            type= mobileRBttn.getText();
        }
        else if(tabletRBttn.isSelected())
        {
            type = tabletRBttn.getText();
        }
        String[] data = {code, name,brand,price,priceRange,type,quantity};
        int row = jTable1.getRowCount();
        int column = jTable1.getColumnCount();
        int nextRow = 0;
        boolean empty = false;
        boolean duplicateData = false;
        do{
            String s = (String) jTable1.getValueAt(nextRow, 0);
            String t = (String) jTable1.getValueAt(nextRow, 1);
            if (s == null || s.length() == 0){
               empty = true;
            }else {
                if (code.equals(s) || name.equals(t)){
                    duplicateData = true;
                    break;
                } else {
                    nextRow++;
                }
            }
        }while (!empty);
        if (!duplicateData) {
            boolean emptyData = false;
            for (int j = 0;j < data.length; j++){
                if (data[j].isEmpty()){
                    emptyData = true;
                }
            }
            if (!emptyData){
                
                if (nextRow < jTable1.getRowCount()){
                    for (int i = 0; i < column; i++){
                    jTable1.setValueAt(data[i], nextRow, i);
                    }
                }else{
                    model.addRow(new Object[]{null});
                }JOptionPane.showMessageDialog(null,"Data is added successfully to the table.");
            }else{
                JOptionPane.showMessageDialog(null, "Empty field. Please fill every field");
            }
        }else{
            JOptionPane.showMessageDialog(null,"Duplicate Data Entered");
        }
        
                            
    }//GEN-LAST:event_addBttnActionPerformed

    private void modelCodeTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modelCodeTfFocusGained
        // TODO add your handling code here:
        if(modelCodeTf.getText().equals("Model Code")){
            modelCodeTf.setText("");
            modelCodeTf.setForeground(new Color(0,0,0));
        }
        
    }//GEN-LAST:event_modelCodeTfFocusGained

    private void modelCodeTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modelCodeTfFocusLost
        // TODO add your handling code here:
        if(modelCodeTf.getText().equals("")){
            modelCodeTf.setText("Model Code");
            modelCodeTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_modelCodeTfFocusLost

    private void modelNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelNameTfActionPerformed

    private void modelNameTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modelNameTfFocusGained
        // TODO add your handling code here:
        if(modelNameTf.getText().equals("Model Name")){
            modelNameTf.setText("");
            modelNameTf.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_modelNameTfFocusGained

    private void modelNameTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modelNameTfFocusLost
        // TODO add your handling code here:
        if(modelNameTf.getText().equals("")){
            modelNameTf.setText("Model Name");
            modelNameTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_modelNameTfFocusLost

    private void priceTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceTfFocusGained
        // TODO add your handling code here:
        if(priceTf.getText().equals("Price")){
            priceTf.setText("");
            priceTf.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_priceTfFocusGained

    private void priceTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceTfFocusLost
        // TODO add your handling code here:
        if(priceTf.getText().equals("")){
            priceTf.setText("Price");
            priceTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_priceTfFocusLost

    private void priceRangeTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceRangeTfFocusGained
        // TODO add your handling code here:
        if(priceRangeTf.getText().equals("Price Range")){
            priceRangeTf.setText("");
            priceRangeTf.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_priceRangeTfFocusGained

    private void priceRangeTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_priceRangeTfFocusLost
        // TODO add your handling code here:
        if(priceRangeTf.getText().equals("")){
            priceRangeTf.setText("Price Range");
            priceRangeTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_priceRangeTfFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void clearBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBttnActionPerformed
        // TODO add your handling code here:
            searchTf.setText("");
            modelCodeTf.setText("");
            modelNameTf.setText("");
            
            priceTf.setText("");
            priceRangeTf.setText("");
            quantityTf.setText("");
            bttnGroup1.clearSelection();
            if(modelNameTf.getText().equals("")){
                modelNameTf.setText("Module Name");
                modelNameTf.setForeground(new Color(153,153,153));
            }
            if(modelCodeTf.getText().equals("")){
                    modelCodeTf.setText("Module Code");
                    modelCodeTf.setForeground(new Color(153,153,153));
            }
            
            if(priceTf.getText().equals("")){
                    priceTf.setText("Price");
                    priceTf.setForeground(new Color(153,153,153));
            }
            if(priceRangeTf.getText().equals("")){
                    priceRangeTf.setText("Price Range");
                    priceRangeTf.setForeground(new Color(153,153,153));
            }
            if(quantityTf.getText().equals("")){
                    quantityTf.setText("Type");
                    quantityTf.setForeground(new Color(153,153,153));
            } 
            if(searchTf.getText().equals("")){
                    searchTf.setText("Search");
                    searchTf.setForeground(new Color(153,153,153));
            }
    }//GEN-LAST:event_clearBttnActionPerformed
    public ArrayList<String> sortBySelection(ArrayList<String> list) {
        for (int i = 0; i < list.size(); i++) {
            int min = Integer.parseInt(list.get(i));
            int minPos = i;
            for (int j = i; j < list.size(); j++) {
                int temp = Integer.parseInt(list.get(j));
                if (temp < min) {
                    min = temp;
                    minPos = j;
                }
            }
            if (min < Integer.parseInt(list.get(i))) {
                String val = list.get(i);
                list.set(i, list.get(minPos));
                list.set(minPos, val);
            }
        }
        return list;

    }
    int binarySearch(ArrayList<String> ray, String price) {
        int l = 0, r = ray.size() - 1;

        while (l <= r) {
            int middle = l + (r - l) / 2;

            // Check if price is present at middle
            if (ray.get(middle).equals(price)) {
                return middle;
            } // If priceis greater, ignore left half 
            else if (price.compareTo(ray.get((middle))) > 0) {
                l = middle + 1;
                return l;
            } else {
                r = middle - 1;
                return r;
            }
        }
        return -1;
    }
    
    
    private void searchTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTfFocusGained
        // TODO add your handling code here:
        if(searchTf.getText().equals("Search By Price")){
            searchTf.setText("");
            searchTf.setForeground(new Color(0,0,0));
        } 
    }//GEN-LAST:event_searchTfFocusGained

    private void searchTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTfFocusLost
        // TODO add your handling code here:
        if(searchTf.getText().equals("")){
            searchTf.setText("Search By Price");
            searchTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_searchTfFocusLost

    private void quantityTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityTfFocusGained
        // TODO add your handling code here:
        if(quantityTf.getText().equals("Quantity")){
            quantityTf.setText("");
            quantityTf.setForeground(new Color(0,0,0));
        } 
    }//GEN-LAST:event_quantityTfFocusGained

    private void quantityTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityTfFocusLost
        // TODO add your handling code here:
        if(quantityTf.getText().equals("")){
            quantityTf.setText("Quantity");
            quantityTf.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_quantityTfFocusLost

    private void quantityTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTfActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_quantityTfActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //Code to delete the selected row from the table
        int del=JOptionPane.showConfirmDialog(null,"Do you want to Delete this row?");
        if(del==0){
        model.removeRow(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        int del=JOptionPane.showConfirmDialog(null,"Do you want to Delete this row?");
        if(del==0){
        model.removeRow(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void quantityTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTfKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            quantityTf.setEditable(true);
        }else{
            quantityTf.setEditable(false);
        }
    }//GEN-LAST:event_quantityTfKeyPressed

    private void priceTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTfKeyPressed
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(Character.isDigit(c)||(c==evt.VK_BACK_SPACE)||(c==evt.VK_DELETE)){
            priceTf.setEditable(true);
        }else{
            priceTf.setEditable(false);
        }
    }//GEN-LAST:event_priceTfKeyPressed

    private void searchTfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTfKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchTfKeyPressed
    int x,y;
    private void searchBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBttnActionPerformed
        // TODO add your handling code here:
        String value = searchTf.getText();
        ArrayList<String> price = new ArrayList();
        ArrayList<String> code = new ArrayList();
        ArrayList<String> name = new ArrayList();
        ArrayList<String> type = new ArrayList();
        int row = jTable1.getRowCount();
        int rowIndex = 0;
        String s = "";
        boolean rowEmpty = false;
        if( searchTf.getText().equals("Search By Price")){
            JOptionPane.showMessageDialog(null, "Please input valid data for searching");
        }else {   
            do {
                String modelCode = (String) jTable1.getValueAt(rowIndex, 0);
                String modelName = (String) jTable1.getValueAt(rowIndex, 1);
                String modelPrice = (String) jTable1.getValueAt(rowIndex, 3);
                String modelType = (String) jTable1.getValueAt(rowIndex, 5);

                if (modelPrice != null && modelPrice.length() != 0) {
                    code.add(modelCode);
                    name.add(modelName);
                    price.add(modelPrice);
                    type.add(modelType);
                    rowIndex++;
                } else {
                rowEmpty = true;
                }
            } while (rowIndex < row & rowEmpty == false);

            for (int i = 0; i < price.size(); i++) {
                if (price.get(i).equals(value)) {
                    x = i;
                    sortBySelection(price);

                    break;
                }
            }
            if(price.contains(searchTf.getText())){
            int binarySearch = binarySearch(price, value);
            int y = binarySearch;
            if (binarySearch != -1) {
                JOptionPane.showMessageDialog(rootPane, "Value Found \nPrice--->" + searchTf.getText() + 
                        "\n Name--->" + name.set(x,name.get(y)) + 
                        "\n Code--->" + code.set(x,code.get(y)) + "\n Type--->" +type.set(x, type.get(y)));     
            }else{
                JOptionPane.showMessageDialog(rootPane, "Value Not Found"); 
            }
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "No Items Available"); 
            }
        
        }
        
        
    }//GEN-LAST:event_searchBttnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int count = 0;
        boolean value = false;
        ArrayList<String> brand = new ArrayList();
        int ro = jTable1.getRowCount();
        int roIndex = 0;
        boolean roEmpty = false;
        String tfBrand = jComboBox1.getSelectedItem().toString();

        do {
            String str = (String) jTable1.getValueAt(roIndex, 0);
            if (str != null && str.length() != 0) {
                roIndex++;
            } else {
                roEmpty = true;
            }
        } while (roIndex < ro & roEmpty == false);
        for(int i = 0; i < roIndex; i++){
            String option = (String)jTable1.getValueAt(i,2);
            brand.add(option);   
        }
        for (int i = 0; i < brand.size();i++){
            if(brand.get(i).equals(tfBrand)){
                count++;
            
            }
        }
        JOptionPane.showMessageDialog(null, "The total Product of "+tfBrand+" Brand is " + count);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
        String path = System.getProperty(("user.dir") + "/src/Coursework/20048803 Aashutosh Sharma.pdf");
        try{
            File file = new File(path);
            if(file.exists()){
                if(Desktop.isDesktopSupported()){
                    Desktop.getDesktop().open(file);
                }else{
                    JOptionPane.showMessageDialog(null , "File not Supported");
                }
                }else{
                JOptionPane.showMessageDialog(null, "File not Exist");
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Something went wrong");
        }
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Coretech.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Coretech.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Coretech.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Coretech.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Coretech().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBttn;
    private javax.swing.JComboBox<String> brandTf;
    private javax.swing.ButtonGroup bttnGroup1;
    private javax.swing.JButton clearBttn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton mobileRBttn;
    private javax.swing.JTextField modelCodeTf;
    private javax.swing.JTextField modelNameTf;
    private javax.swing.JTextField priceRangeTf;
    private javax.swing.JTextField priceTf;
    private javax.swing.JTextField quantityTf;
    private javax.swing.JButton searchBttn;
    private javax.swing.JTextField searchTf;
    private javax.swing.JRadioButton tabletRBttn;
    // End of variables declaration//GEN-END:variables
}
